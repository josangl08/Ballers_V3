[
  "tests/test_auth.py::TestAuthController::test_admin_login_success",
  "tests/test_auth.py::TestAuthController::test_coach_login_success",
  "tests/test_auth.py::TestAuthController::test_empty_credentials_login_fails",
  "tests/test_auth.py::TestAuthController::test_get_user_by_id_success",
  "tests/test_auth.py::TestAuthController::test_get_user_by_invalid_id_returns_none",
  "tests/test_auth.py::TestAuthController::test_invalid_password_login_fails",
  "tests/test_auth.py::TestAuthController::test_invalid_username_login_fails",
  "tests/test_auth.py::TestAuthController::test_player_login_success",
  "tests/test_auth.py::TestAuthController::test_session_creation_includes_user_data",
  "tests/test_auth.py::TestAuthController::test_session_creation_with_remember_me",
  "tests/test_auth.py::TestAuthIntegration::test_full_auth_flow_admin",
  "tests/test_auth.py::TestAuthIntegration::test_full_auth_flow_coach",
  "tests/test_auth.py::TestPasswordHashing::test_different_passwords_different_hashes",
  "tests/test_auth.py::TestPasswordHashing::test_password_hashing_consistency",
  "tests/test_dash_app.py::TestDashAppBasics::test_app_can_be_imported",
  "tests/test_dash_app.py::TestDashAppBasics::test_app_has_required_components",
  "tests/test_dash_app.py::TestDashAppBasics::test_dash_app_initializes_correctly",
  "tests/test_database.py::TestDatabaseEdgeCases::test_duplicate_username_handling",
  "tests/test_database.py::TestDatabaseEdgeCases::test_invalid_user_type",
  "tests/test_database.py::TestDatabaseInitialization::test_database_info_returns_correct_data",
  "tests/test_database.py::TestDatabaseInitialization::test_get_db_session_returns_valid_session",
  "tests/test_database.py::TestDatabaseInitialization::test_initialize_database_success",
  "tests/test_database.py::TestDatabaseOperations::test_create_and_retrieve_user",
  "tests/test_database.py::TestDatabaseOperations::test_delete_user",
  "tests/test_database.py::TestDatabaseOperations::test_query_users_by_type",
  "tests/test_database.py::TestDatabaseOperations::test_update_user_data",
  "tests/test_database.py::TestDatabaseOperations::test_user_relationships_work",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_extract_position_specific_features",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_extract_position_specific_unsupported_position",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_extract_universal_features",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_extract_universal_features_insufficient_data",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_extract_zone_features_different_positions",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_feature_consistency_across_tiers",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_feature_engineer_initialization",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_feature_tier_definitions",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_generate_feature_quality_report",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_get_zone_weights_by_position",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_normalize_feature_values",
  "tests/test_feature_engineer.py::TestFeatureEngineer::test_validate_minimum_data",
  "tests/test_ml_dashboard_visualizations.py::TestMLEnhancedRadarChart::test_ml_radar_chart_creation_success",
  "tests/test_ml_dashboard_visualizations.py::TestMLEnhancedRadarChart::test_ml_radar_chart_handles_errors",
  "tests/test_ml_dashboard_visualizations.py::TestMLEnhancedRadarChart::test_ml_radar_chart_validates_scatterpolar_structure",
  "tests/test_ml_dashboard_visualizations.py::TestMLEnhancedRadarChart::test_ml_radar_chart_with_default_season",
  "tests/test_ml_dashboard_visualizations.py::TestMLVisualizationErrorHandling::test_ml_radar_invalid_player_id",
  "tests/test_ml_dashboard_visualizations.py::TestMLVisualizationErrorHandling::test_pdi_chart_empty_data",
  "tests/test_ml_dashboard_visualizations.py::TestMLVisualizationErrorHandling::test_pdi_chart_invalid_player_id",
  "tests/test_ml_dashboard_visualizations.py::TestMLVisualizationPerformance::test_ml_radar_chart_memory_usage",
  "tests/test_ml_dashboard_visualizations.py::TestMLVisualizationPerformance::test_pdi_chart_response_time",
  "tests/test_ml_dashboard_visualizations.py::TestPDIEvolutionChart::test_pdi_evolution_chart_creation_success",
  "tests/test_ml_dashboard_visualizations.py::TestPDIEvolutionChart::test_pdi_evolution_chart_handles_ml_errors",
  "tests/test_ml_dashboard_visualizations.py::TestPDIEvolutionChart::test_pdi_evolution_chart_validates_figure_structure",
  "tests/test_ml_dashboard_visualizations.py::TestPDIEvolutionChart::test_pdi_evolution_chart_with_default_seasons",
  "tests/test_ml_dashboard_visualizations.py::TestProfessionalStatsContentIntegration::test_professional_stats_content_structure",
  "tests/test_ml_dashboard_visualizations.py::TestProfessionalStatsContentIntegration::test_professional_stats_includes_ml_section",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_calculate_position_specific_metrics",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_calculate_universal_metrics",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_calculate_zone_metrics",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_controller_initialization",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_development_area_calculations",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_get_league_rankings",
  "tests/test_ml_metrics.py::TestMLMetricsController::test_get_position_averages",
  "tests/test_ml_metrics.py::TestMLMetricsModel::test_get_improvement_areas",
  "tests/test_ml_metrics.py::TestMLMetricsModel::test_get_strength_areas",
  "tests/test_ml_metrics.py::TestMLMetricsModel::test_is_stale_property",
  "tests/test_ml_metrics.py::TestMLMetricsModel::test_ml_metrics_model_creation",
  "tests/test_ml_metrics.py::TestMLMetricsModel::test_pdi_breakdown_property",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_apply_default_normalization",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_calculate_metric_benchmarks",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_calculate_normalized_aggregates",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_calculate_percentile",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_calculate_position_benchmarks",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_calculate_position_rankings",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_generate_position_benchmark_report",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_get_position_specific_weights",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_normalize_player_metrics_with_benchmarks",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_normalize_player_metrics_without_benchmarks",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_percentile_to_normalized_score",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_position_normalizer_initialization",
  "tests/test_position_normalizer.py::TestPositionNormalizer::test_update_position_benchmarks"
]